generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains an index with non-default null sort order and requires additional setup for migrations. Visit https://pris.ly/d/default-index-null-ordering for more info.
model livestream_latest {
  mint_id          String   @id
  fetched_at       DateTime @db.Timestamptz(6)
  is_live          Boolean?
  num_participants Int?
  market_cap       Decimal? @db.Decimal
  usd_market_cap   Decimal? @db.Decimal
  thumbnail        String?
  livestream       Json
  updated_at       DateTime @default(now()) @db.Timestamptz(6)
  tokens           tokens   @relation(fields: [mint_id], references: [mint_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([fetched_at(sort: Desc)], map: "livestream_latest_fetched_idx")
  @@index([num_participants(sort: Desc)])
}

model livestream_regions {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  mint_id    String
  fetched_at DateTime @db.Timestamptz(6)
  region     String
  region_url String?
  distance   Decimal? @db.Decimal
  payload    Json
  created_at DateTime @default(now()) @db.Timestamptz(6)
  tokens     tokens   @relation(fields: [mint_id], references: [mint_id], onDelete: Cascade, onUpdate: NoAction)
}

model livestream_sessions {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  mint_id           String
  observed_at       DateTime @db.Timestamptz(6)
  duration_ms       BigInt?
  participant_count Int?
  track_count       Int?
  region_url        String?
  summary           Json
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  tokens            tokens   @relation(fields: [mint_id], references: [mint_id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains an index with non-default null sort order and requires additional setup for migrations. Visit https://pris.ly/d/default-index-null-ordering for more info.
model livestream_clips {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  mint_id          String
  captured_by      String?
  label            String?
  started_at       DateTime @db.Timestamptz(6)
  ended_at         DateTime @db.Timestamptz(6)
  duration_ms      Int
  viewer_count_min Int?
  viewer_count_max Int?
  params           Json?
  s3_audio_key     String?
  s3_video_key     String?
  status           String   @default("ready")
  notes            String?
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  tokens           tokens   @relation(fields: [mint_id], references: [mint_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([mint_id, started_at(sort: Desc)], map: "livestream_clips_mint_started_idx")
}

model livestream_snapshots {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  mint_id          String
  fetched_at       DateTime @db.Timestamptz(6)
  is_live          Boolean?
  num_participants Int?
  max_participants Int?
  market_cap       Decimal? @db.Decimal
  usd_market_cap   Decimal? @db.Decimal
  mode             String?
  thumbnail        String?
  livestream       Json
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  tokens           tokens   @relation(fields: [mint_id], references: [mint_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([mint_id, fetched_at])
}

/// This model contains an index with non-default null sort order and requires additional setup for migrations. Visit https://pris.ly/d/default-index-null-ordering for more info.
model livestream_top_cache {
  mint_id          String   @id
  fetched_at       DateTime @db.Timestamptz(6)
  num_participants Int?
  market_cap       Decimal? @db.Decimal
  usd_market_cap   Decimal? @db.Decimal
  thumbnail        String?
  is_live          Boolean?
  livestream       Json?

  @@index([num_participants(sort: Desc), fetched_at(sort: Desc)], map: "livestream_top_cache_participants_idx")
}

model token_hourly_metrics {
  mint_id              String
  bucket               DateTime @db.Timestamptz(6)
  trade_count          Int      @default(0)
  buy_count            Int      @default(0)
  sell_count           Int      @default(0)
  buy_volume_lamports  Decimal  @default(0) @db.Decimal(38, 0)
  sell_volume_lamports Decimal  @default(0) @db.Decimal(38, 0)
  tokens               tokens   @relation(fields: [mint_id], references: [mint_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([mint_id, bucket])
}

model tokens {
  mint_id              String                 @id
  symbol               String?
  name                 String?
  creator_address      String?
  is_approved_creator  Boolean?
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  livestream_latest    livestream_latest?
  livestream_regions   livestream_regions[]
  livestream_sessions  livestream_sessions[]
  livestream_clips     livestream_clips[]
  livestream_snapshots livestream_snapshots[]
  token_hourly_metrics token_hourly_metrics[]
  trade_events         trade_events[]
}

model trade_events {
  id               BigInt   @id @default(autoincrement())
  mint_id          String
  signature        String?
  slot             BigInt?
  tx_index         Int?
  is_buy           Boolean?
  lamports         Decimal  @db.Decimal(38, 0)
  sol              Decimal? @db.Decimal
  token_amount     Decimal? @db.Decimal
  token_amount_raw String?
  user_address     String?
  name             String?
  symbol           String?
  raw              Json?
  observed_at      DateTime @default(now()) @db.Timestamptz(6)
  tokens           tokens   @relation(fields: [mint_id], references: [mint_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([mint_id, observed_at(sort: Desc)], map: "trade_events_mint_time_idx")
  @@index([signature])
}

model trade_summary_cache {
  mint_id              String    @id
  trade_count          BigInt
  buy_count            BigInt
  sell_count           BigInt
  buy_volume_lamports  Decimal   @db.Decimal(38, 0)
  sell_volume_lamports Decimal   @db.Decimal(38, 0)
  first_seen_at        DateTime? @db.Timestamptz(6)
  last_seen_at         DateTime? @db.Timestamptz(6)

  @@index([trade_count(sort: Desc), mint_id], map: "trade_summary_cache_rank_idx")
}
